{"version":3,"sources":["Components/Form.js","Components/Navbar.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","text","setText","className","style","color","mode","value","backgroundColor","onChange","event","console","log","target","id","rows","onClick","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","length","trim","replace","Navbar","href","title","type","toggleGreenMode","htmlFor","toggleRedMode","toggleMode","Alert","alert","role","message","App","setMode","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.431fb13d.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\n\r\nexport default function Form(props) {\r\n\r\n    const updateOnChange = (event)=>{\r\n        console.log('on change')\r\n        setText(event.target.value)\r\n    };\r\n    const updateOnUpClick = ()=>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Upper Case\",\"success\")\r\n    }\r\n    const updateOnLoClick = ()=>{\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lower Case\",\"success\")\r\n    }\r\n    const updateOnResverseClick = ()=>{\r\n        let newText= text.split('').reverse().join('')\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Reverse\",\"success\")\r\n    }\r\n    const updateClearClick = ()=>{\r\n        if(text.length !==0){\r\n            setText('');\r\n            props.showAlert(\"Text is cleared !!!!\",\"success\")\r\n        }\r\n        \r\n    }\r\n    // const updateCopyClick = ()=>{\r\n    //    let  text = document.getElementById('box-area');\r\n    //    navigator.clipboard.writeText(text.value);\r\n    //    props.showAlert(\"Text is copied !!!!\",\"success\")\r\n        \r\n    // }\r\n\r\n    const [text, setText]= useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode === 'dark'?'white':\"#042743\"}}>\r\n         <h1>Enter The text below</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor : props.mode === 'dark'?'grey':\"white\",color :props.mode === 'dark'?'white':\"black\" }} onChange={updateOnChange} id=\"box-area\" rows={8}></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.mode ==='light'?'primary':\"danger\"} mx-3`} onClick={updateOnUpClick}>Update to UpperCase</button>\r\n            <button className={`btn btn-${props.mode ==='light'?'primary':\"danger\"} mx-3`} onClick={updateOnLoClick}>Update to LowerCase</button>\r\n            <button className={`btn btn-${props.mode ==='light'?'primary':\"danger\"} mx-3`} onClick={updateOnResverseClick}>Convert to Resverse text</button>\r\n            <button className={`btn btn-${props.mode ==='light'?'primary':\"danger\"} mx-3`} onClick={updateClearClick}>Clear text</button>\r\n            {/* <button className=\"btn btn-primary mx-3\" onClick={updateCopyClick}>Copy text</button> */}\r\n        </div>\r\n        <div className=\"container\" style={{color : props.mode === 'dark'?'white':\"#042743\"}}>\r\n            <h1>Your Suummary</h1>\r\n            <p>{text.length === 0 ?0:text.trim().replace(/  +/g, \" \").split(' ').length} word and {text.length} Characters</p>\r\n            <p>{0.008 * text.length} Miniutes Read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length >0 ?text :\"Enter something in above text boxs to Preview\"}</p>\r\n        </div>\r\n       </> \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About Util</a>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode ==='light'?'dark':\"light\"}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleGreenMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Green Mode</label>\r\n      </div>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode ==='light'?'dark':\"light\"}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleRedMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable red Mode</label>\r\n      </div>\r\n      {/* <div className=\"form-check form-switch mx-3\">\r\n        <input className=\"form-check-input\" onClick={props.toggleMode}type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div> */}\r\n      <div className={`form-check form-switch mx-3 text-${props.mode ==='light'?'dark':\"light\"}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title : PropTypes.string\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {props.alert.type} : <strong>{props.alert.message}</strong>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './Components/About';\nimport Form from './Components/Form';\nimport Navbar from \"./Components/Navbar\";\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) =>{\n      setAlert({\n        message : message,\n        type : type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 3000);\n  }\n  const toggleMode = ()=>{\n    \n    if(mode==='light'){\n      document.body.style.backgroundColor = '#042743'\n      setMode('dark');\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n    }\n    else{\n      document.body.style.backgroundColor = 'white'\n      setMode('light');\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  const toggleGreenMode = ()=>{\n    \n    if(mode==='light'){\n      document.body.style.backgroundColor = '#004e02'\n      setMode('dark');\n      showAlert(\"Green Mode has been enabled\",\"success\");\n    }\n    else{\n      document.body.style.backgroundColor = 'white'\n      setMode('light');\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  const toggleRedMode = ()=>{\n    \n    if(mode==='light'){\n      document.body.style.backgroundColor = '#4c1217'\n      setMode('dark');\n      showAlert(\"Red Mode has been enabled\",\"success\");\n    }\n    else{\n      document.body.style.backgroundColor = 'white'\n      setMode('light');\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title =\"TextUtils\" mode={mode} toggleMode={toggleMode}  toggleGreenMode={toggleGreenMode} toggleRedMode={toggleRedMode}/>\n      <Alert alert={alert}/>\n      <Form mode={mode} showAlert={showAlert}/>\n      {/* <Switch>\n          { <Route exact path=\"/about\">\n            <About/>\n          </Route>}\n          <Route exact path=\"/\">\n          \n          </Route>\n        </Switch>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}